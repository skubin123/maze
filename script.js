	function drawMaze(){
  var scaleFactor = 1.4;
	var cord=[
    [2, 2, 194, 2],
    [210, 2, 402, 2],
    [18, 18, 66, 18],
    [114, 18, 130, 18],
    [162, 18, 178, 18],
    [210, 18, 242, 18],
    [274, 18, 322, 18],
    [338, 18, 354, 18],
    [2, 34, 18, 34],
    [50, 34, 66, 34],
    [82, 34, 114, 34],
    [178, 34, 194, 34],
    [226, 34, 274, 34],
    [290, 34, 338, 34],
    [354, 34, 386, 34],
    [18, 50, 34, 50],
    [66, 50, 82, 50],
    [98, 50, 130, 50],
    [146, 50, 162, 50],
    [194, 50, 242, 50],
    [258, 50, 274, 50],
    [290, 50, 306, 50],
    [338, 50, 354, 50],
    [386, 50, 402, 50],
    [34, 66, 66, 66],
    [82, 66, 98, 66],
    [130, 66, 146, 66],
    [162, 66, 178, 66],
    [210, 66, 226, 66],
    [242, 66, 258, 66],
    [274, 66, 290, 66],
    [306, 66, 338, 66],
    [18, 82, 34, 82],
    [50, 82, 66, 82],
    [82, 82, 114, 82],
    [162, 82, 178, 82],
    [226, 82, 242, 82],
    [322, 82, 354, 82],
    [370, 82, 402, 82],
    [2, 98, 18, 98],
    [66, 98, 82, 98],
    [98, 98, 130, 98],
    [146, 98, 162, 98],
    [194, 98, 226, 98],
    [242, 98, 274, 98],
    [290, 98, 322, 98],
    [338, 98, 354, 98],
    [2, 114, 114, 114],
    [178, 114, 242, 114],
    [274, 114, 290, 114],
    [306, 114, 322, 114],
    [354, 114, 370, 114],
    [18, 130, 82, 130],
    [114, 130, 162, 130],
    [210, 130, 242, 130],
    [258, 130, 290, 130],
    [322, 130, 402, 130],
    [2, 146, 34, 146],
    [146, 146, 210, 146],
    [242, 146, 274, 146],
    [306, 146, 338, 146],
    [354, 146, 386, 146],
    [18, 162, 98, 162],
    [130, 162, 162, 162],
    [210, 162, 242, 162],
    [274, 162, 290, 162],
    [306, 162, 354, 162],
    [386, 162, 402, 162],
    [18, 178, 34, 178],
    [114, 178, 130, 178],
    [146, 178, 162, 178],
    [178, 178, 194, 178],
    [226, 178, 290, 178],
    [370, 178, 386, 178],
    [2, 194, 18, 194],
    [34, 194, 50, 194],
    [66, 194, 82, 194],
    [98, 194, 114, 194],
    [130, 194, 146, 194],
    [162, 194, 178, 194],
    [194, 194, 226, 194],
    [258, 194, 274, 194],
    [338, 194, 402, 194],
    [18, 210, 34, 210],
    [50, 210, 66, 210],
    [114, 210, 130, 210],
    [146, 210, 194, 210],
    [210, 210, 242, 210],
    [274, 210, 290, 210],
    [322, 210, 386, 210],
    [34, 226, 50, 226],
    [66, 226, 82, 226],
    [114, 226, 130, 226],
    [194, 226, 226, 226],
    [290, 226, 322, 226],
    [338, 226, 370, 226],
    [18, 242, 66, 242],
    [82, 242, 114, 242],
    [146, 242, 194, 242],
    [258, 242, 274, 242],
    [322, 242, 338, 242],
    [370, 242, 386, 242],
    [34, 258, 50, 258],
    [66, 258, 82, 258],
    [114, 258, 178, 258],
    [210, 258, 258, 258],
    [306, 258, 338, 258],
    [370, 258, 386, 258],
    [18, 274, 34, 274],
    [50, 274, 114, 274],
    [130, 274, 178, 274],
    [194, 274, 274, 274],
    [290, 274, 306, 274],
    [338, 274, 386, 274],
    [2, 290, 18, 290],
    [66, 290, 82, 290],
    [114, 290, 146, 290],
    [178, 290, 194, 290],
    [242, 290, 258, 290],
    [274, 290, 338, 290],
    [370, 290, 386, 290],
    [2, 306, 66, 306],
    [162, 306, 178, 306],
    [226, 306, 242, 306],
    [258, 306, 274, 306],
    [306, 306, 322, 306],
    [338, 306, 402, 306],
    [18, 322, 34, 322],
    [66, 322, 82, 322],
    [98, 322, 178, 322],
    [210, 322, 306, 322],
    [322, 322, 386, 322],
    [50, 338, 194, 338],
    [226, 338, 242, 338],
    [274, 338, 306, 338],
    [354, 338, 370, 338],
    [114, 354, 130, 354],
    [162, 354, 178, 354],
    [226, 354, 242, 354],
    [258, 354, 322, 354],
    [370, 354, 386, 354],
    [2, 370, 18, 370],
    [50, 370, 82, 370],
    [98, 370, 114, 370],
    [130, 370, 194, 370],
    [210, 370, 226, 370],
    [242, 370, 274, 370],
    [306, 370, 370, 370],
    [386, 370, 402, 370],
    [18, 386, 98, 386],
    [114, 386, 210, 386],
    [226, 386, 258, 386],
    [274, 386, 306, 386],
    [322, 386, 354, 386],
    [370, 386, 386, 386],
    [2, 402, 194, 402],
    [210, 402, 402, 402],
    [2, 2, 2, 402],
    [18, 50, 18, 66],
    [18, 194, 18, 210],
    [18, 226, 18, 274],
    [18, 322, 18, 370],
    [34, 18, 34, 50],
    [34, 66, 34, 98],
    [34, 162, 34, 194],
    [34, 210, 34, 226],
    [34, 274, 34, 290],
    [34, 322, 34, 338],
    [34, 354, 34, 386],
    [50, 50, 50, 66],
    [50, 98, 50, 114],
    [50, 130, 50, 162],
    [50, 178, 50, 194],
    [50, 258, 50, 322],
    [50, 354, 50, 370],
    [66, 18, 66, 66],
    [66, 82, 66, 98],
    [66, 146, 66, 178],
    [66, 194, 66, 210],
    [66, 226, 66, 242],
    [66, 322, 66, 354],
    [82, 2, 82, 18],
    [82, 34, 82, 50],
    [82, 66, 82, 98],
    [82, 130, 82, 146],
    [82, 178, 82, 258],
    [82, 290, 82, 322],
    [82, 354, 82, 386],
    [98, 2, 98, 34],
    [98, 50, 98, 66],
    [98, 130, 98, 226],
    [98, 258, 98, 322],
    [98, 338, 98, 370],
    [98, 386, 98, 402],
    [114, 66, 114, 82],
    [114, 114, 114, 130],
    [114, 146, 114, 178],
    [114, 194, 114, 210],
    [114, 242, 114, 258],
    [114, 274, 114, 306],
    [114, 354, 114, 386],
    [130, 18, 130, 114],
    [130, 130, 130, 162],
    [130, 178, 130, 194],
    [130, 210, 130, 258],
    [130, 306, 130, 322],
    [146, 2, 146, 34],
    [146, 66, 146, 98],
    [146, 114, 146, 130],
    [146, 162, 146, 178],
    [146, 194, 146, 242],
    [146, 290, 146, 306],
    [146, 338, 146, 354],
    [162, 18, 162, 82],
    [162, 98, 162, 130],
    [162, 178, 162, 194],
    [162, 226, 162, 242],
    [162, 274, 162, 306],
    [162, 354, 162, 370],
    [178, 34, 178, 50],
    [178, 82, 178, 146],
    [178, 162, 178, 178],
    [178, 210, 178, 226],
    [178, 258, 178, 274],
    [178, 306, 178, 322],
    [194, 2, 194, 34],
    [194, 50, 194, 82],
    [194, 114, 194, 130],
    [194, 146, 194, 162],
    [194, 178, 194, 210],
    [194, 226, 194, 370],
    [210, 18, 210, 50],
    [210, 66, 210, 98],
    [210, 162, 210, 194],
    [210, 210, 210, 226],
    [210, 242, 210, 258],
    [210, 290, 210, 338],
    [210, 354, 210, 402],
    [226, 50, 226, 66],
    [226, 130, 226, 146],
    [226, 226, 226, 242],
    [226, 274, 226, 306],
    [226, 370, 226, 386],
    [242, 34, 242, 50],
    [242, 66, 242, 130],
    [242, 146, 242, 162],
    [242, 178, 242, 258],
    [242, 338, 242, 370],
    [258, 2, 258, 34],
    [258, 50, 258, 82],
    [258, 114, 258, 130],
    [258, 162, 258, 178],
    [258, 194, 258, 242],
    [258, 290, 258, 354],
    [274, 18, 274, 34],
    [274, 66, 274, 98],
    [274, 210, 274, 226],
    [274, 242, 274, 274],
    [274, 370, 274, 386],
    [290, 50, 290, 114],
    [290, 130, 290, 210],
    [290, 226, 290, 258],
    [290, 274, 290, 322],
    [290, 354, 290, 370],
    [306, 66, 306, 82],
    [306, 114, 306, 146],
    [306, 162, 306, 226],
    [306, 242, 306, 274],
    [306, 322, 306, 338],
    [306, 370, 306, 386],
    [322, 34, 322, 66],
    [322, 82, 322, 98],
    [322, 178, 322, 210],
    [322, 226, 322, 242],
    [322, 274, 322, 290],
    [322, 306, 322, 354],
    [338, 2, 338, 34],
    [338, 98, 338, 146],
    [338, 162, 338, 194],
    [338, 210, 338, 242],
    [338, 258, 338, 274],
    [338, 290, 338, 306],
    [338, 338, 338, 370],
    [354, 34, 354, 98],
    [354, 146, 354, 178],
    [354, 242, 354, 290],
    [354, 322, 354, 354],
    [354, 386, 354, 402],
    [370, 2, 370, 18],
    [370, 50, 370, 82],
    [370, 98, 370, 130],
    [370, 162, 370, 194],
    [370, 226, 370, 242],
    [370, 290, 370, 306],
    [370, 354, 370, 386],
    [386, 18, 386, 34],
    [386, 50, 386, 66],
    [386, 82, 386, 114],
    [386, 210, 386, 226],
    [386, 242, 386, 258],
    [386, 322, 386, 354],
    [402, 2, 402, 402],
	];
	
	
	cord = cord.map(function(coordinate) {
        return coordinate.map(function(value) {
            return value * scaleFactor;
        });
    });
	
	const canvas = document.getElementById("canvas");
    canvas.width *= scaleFactor;
    canvas.height *= scaleFactor;
	
	
   const ctx = canvas.getContext("2d");
   console.log("maze "+cord.length);
   ctx.beginPath();
   for(i=0;i<cord.length;i++){
     console.log("maze2");
     ctx.moveTo(cord[i][0],cord[i][1]);
     ctx.lineTo(cord[i][2],cord[i][3]);
    }
    ctx.lineWidth = 2;
    ctx.stroke();
    console.log("maze3 "+cord.length);
}
function drawPath() {
    var scaleFactor = 1.4;
    var path = [
        [202, 2], [202, 42], [186, 42], [186, 58], [170, 58], [170, 26], [186, 26], [186, 10], [154, 10], [154, 42], [138, 42], [138, 58], [154, 58], [154, 90], [170, 90], [170, 138], [138, 138], [138,154], [170,154], [170, 186], [186, 186], [186, 202], [154, 202], [154, 186], [138, 186], [138, 170], [122, 170], [122, 138], [106, 138], [106, 186], [122, 186], [122, 202], [138, 202], [138, 250], [186, 250], [186, 282], [170, 282], [170, 298], [186, 298], [186, 330], [90, 330], [90, 282], [58, 282], [58, 298], [74, 298], [74, 314], [58, 314], [58, 330], [42, 330], [42, 346], [58, 346], [58, 362], [74, 362], [74, 346], [90, 346], [90, 378], [106, 378], [106, 394], [202, 394], [202, 402] 
    ];

    path = path.map(function(coordinate) {
        return coordinate.map(function(value) {
            return value * scaleFactor;
        });
    });

    const canvas = document.getElementById("canvas");
    const ctx = canvas.getContext("2d");
    const drawDelay = 100;

    

    for (let i = 0; i < path.length - 1; i++) {
        setTimeout(() => {
            ctx.beginPath();
            ctx.moveTo(path[i][0], path[i][1]);
            ctx.lineTo(path[i + 1][0], path[i + 1][1]);
            ctx.lineWidth = 2;
            ctx.strokeStyle = "cyan";
            ctx.stroke();
        if (i === path.length - 2) {
                changeImage();
            }
        }, i * drawDelay);
    }


function changeImage() {
    const zarnicaImage = document.getElementById("luc");
     
    zarnicaImage.style.height = "150px";
    zarnicaImage.style.width = "135px";
	zarnicaImage.style.marginLeft = "38%";
	zarnicaImage.src = "slike/zarnica.png";
}


}


function erasePath() {
    const scaleFactor = 1.4;
    var path = [
        [202, 2], [202, 10], [186, 10], [186, 26], [170, 26], [170, 10], [138, 10], [138, 42], [154, 42], [154, 122], [122, 122], [122, 90], [138, 90], [138, 74], [90, 74], [90, 42], [122, 42], [122, 10], [106, 10], [106, 26], [90, 26], [90, 10], [42, 10], [42, 26], [10, 26], [10, 42], [26, 42], [26, 58], [42, 58], [42, 74], [26, 74], [26, 106], [90, 106], [90, 154], [74, 154], [74, 170], [106, 170], [106, 154], [154, 154], [154, 138], [186, 138], [186, 154], [202, 154], [202, 202], [170, 202], [170, 218], [186, 218], [186, 234], [202, 234], [202, 250], [234, 250], [234, 266], [266, 266], [266, 282], [218, 282], [218, 298], [250, 298], [250, 314], [266, 314], [266, 298], [282, 298], [282, 314], [298, 314], [298, 298], [314, 298], [314, 314], [362, 314], [362, 330], [250, 330], [250, 362], [266, 362], [266, 378], [234, 378], [234, 394], [202, 394], [202, 402]
    ];

    path = path.map(function(coordinate) {
        return coordinate.map(function(value) {
            return value * scaleFactor;
        });
    });

    const canvas = document.getElementById("canvas");
    const ctx = canvas.getContext("2d");
    const drawDelay = 100;

    //path.reverse();

    for (let i = 0; i < path.length - 1; i++) {
        setTimeout(() => {
            ctx.beginPath();
            ctx.moveTo(path[i][0], path[i][1]);
            ctx.lineTo(path[i + 1][0], path[i + 1][1]);
            ctx.lineWidth = 4;
            ctx.strokeStyle = "yellow"; 
            ctx.stroke();
        if (i === path.length - 2) {
                changeImage();
            }
        }, i * drawDelay);
    }


function changeImage() {
    const lucImage = document.getElementById("luc");

	lucImage.style.height = "150px";
    lucImage.style.width = "150px";
	lucImage.style.marginLeft = "37%";
    lucImage.src = "slike/luc.png";
}
}

const resetButton = document.getElementById("yellow");
resetButton.addEventListener("click", erasePath);

